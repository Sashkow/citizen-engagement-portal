# Generated by Django 2.0.7 on 2018-07-22 11:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DigestList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=200)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.City')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('date_event', models.DateTimeField(blank=True, null=True)),
                ('address', models.CharField(max_length=300)),
                ('publication_date', models.DateField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.District')),
            ],
        ),
        migrations.CreateModel(
            name='EventsParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.Event')),
            ],
        ),
        migrations.CreateModel(
            name='EventsPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='')),
                ('is_it_cover', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.Event')),
            ],
        ),
        migrations.CreateModel(
            name='EventsSubscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.Event')),
            ],
        ),
        migrations.CreateModel(
            name='EventsType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='PointsHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('points', models.IntegerField()),
                ('is_it_org', models.BooleanField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(max_length=80)),
                ('quantity_of_points', models.IntegerField()),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.City')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=80)),
                ('last_name', models.CharField(max_length=80)),
                ('date_of_registration', models.DateField(auto_now_add=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('raiting_points', models.IntegerField(default=0)),
                ('blocked', models.BooleanField(default=False)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.City')),
                ('rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.Rank')),
            ],
        ),
        migrations.AddField(
            model_name='report',
            name='user_from',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from+', to='volunteer.User'),
        ),
        migrations.AddField(
            model_name='report',
            name='user_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to+', to='volunteer.User'),
        ),
        migrations.AddField(
            model_name='pointshistory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.User'),
        ),
        migrations.AddField(
            model_name='eventssubscriber',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.User'),
        ),
        migrations.AddField(
            model_name='eventsparticipant',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.User'),
        ),
        migrations.AddField(
            model_name='event',
            name='events_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.EventsType'),
        ),
        migrations.AddField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.User'),
        ),
        migrations.AddField(
            model_name='digestlist',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.EventsType'),
        ),
        migrations.AddField(
            model_name='digestlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.Event'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteer.User'),
        ),
        migrations.AlterUniqueTogether(
            name='report',
            unique_together={('user_from', 'user_to')},
        ),
        migrations.AlterUniqueTogether(
            name='pointshistory',
            unique_together={('user', 'event', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='eventssubscriber',
            unique_together={('user', 'event')},
        ),
        migrations.AlterUniqueTogether(
            name='eventsparticipant',
            unique_together={('user', 'event')},
        ),
        migrations.AlterUniqueTogether(
            name='comment',
            unique_together={('user', 'event', 'date')},
        ),
    ]
